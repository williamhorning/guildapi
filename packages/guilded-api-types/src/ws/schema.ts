// autogenerated by @jersey/openapi

import type {
	Announcement,
	AnnouncementComment,
	AnnouncementCommentReaction,
	AnnouncementReaction,
	CalendarEvent,
	CalendarEventComment,
	CalendarEventCommentReaction,
	CalendarEventReaction,
	CalendarEventRsvp,
	CalendarEventSeries,
	Category,
	ChannelCategoryRolePermission,
	ChannelCategoryUserPermission,
	ChannelRolePermission,
	ChannelUserPermission,
	ChatEmbed,
	ChatMessage,
	ChatMessageReaction,
	Doc,
	DocComment,
	DocCommentReaction,
	DocReaction,
	Emote,
	ForumTopic,
	ForumTopicComment,
	ForumTopicCommentReaction,
	ForumTopicReaction,
	Group,
	ListItem,
	Mentions,
	Role,
	Server,
	ServerChannel,
	ServerMember,
	ServerMemberBan,
	SocialLink,
	User,
	UserStatus,
	Webhook,
} from '../schema.ts';

/**
 * @description _SocketEventEnvelope
 */
export interface _SocketEventEnvelope {
	/** @description An operation code corresponding to the nature of the sent message (for example, success, failure, etc.) */
	op: 0 | 1 | 2 | 8 | 9;
	/** @description Data of any form depending on the underlying event */
	d?: Record<string, unknown>;
	/** @description Message ID used for replaying events after a disconnect */
	s?: string;
	/** @description Event name for the given message */
	t?: string;
}

/**
 * @description _WelcomeMessage
 */
export interface _WelcomeMessage {
	/** @description The interval in milliseconds that your bot should be configured to send ping frames for the bot's [heartbeat](/docs/api/heartbeat) to be considered valid. */
	heartbeatIntervalMs: number;
	/** @description The last message's ID that was sent to this bot. See [event replay](/docs/api/replay) for more details */
	lastMessageId: string;
	/** @description The ID of the bot */
	botId: string;
	/** @description user */
	user: User & unknown;
} /**
 * @description Emitted when a bot is added to a server
 */

export interface BotServerMembershipCreated {
	/** @description server */
	server: Server;
	/** @description The ID of the user who created this server membership */
	createdBy: string;
} /**
 * @description Emitted when a bot is removed from a server
 */

export interface BotServerMembershipDeleted {
	/** @description server */
	server: Server;
	/** @description The ID of the user who deleted this server membership */
	deletedBy: string;
} /**
 * @description ChatMessageCreated
 */

export interface ChatMessageCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description message */
	message: ChatMessage;
} /**
 * @description ChatMessageUpdated
 */

export interface ChatMessageUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description message */
	message: ChatMessage;
} /**
 * @description ChatMessageDeleted
 */

export interface ChatMessageDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description The ISO 8601 timestamp that the message was deleted at */
	deletedAt: string;
	/** @description message */
	message: {
		id: string;
		type: 'default' | 'system';
		serverId?: string;
		groupId?: string;
		channelId: string;
		content?: string;
		hiddenLinkPreviewUrls?: (string)[];
		embeds?: (ChatEmbed)[];
		replyMessageIds?: (string)[];
		isPrivate?: boolean;
		isSilent?: boolean;
		isPinned?: boolean;
		mentions?: Mentions;
		createdAt: string;
		createdBy: string;
		createdByWebhookId?: string;
		updatedAt?: string;
		deletedAt: string;
	} & (unknown | unknown);
} /**
 * @description ServerMemberJoined
 */

export interface ServerMemberJoined {
	/** @description The ID of the server */
	serverId: string;
	/** @description member */
	member: ServerMember;
	/** @description Count of members in this server after this join. **Note:** at higher member counts (1000+), this value is only updated periodically and should not be used in situations that require absolute accuracy */
	serverMemberCount: number;
} /**
 * @description ServerMemberRemoved
 */

export interface ServerMemberRemoved {
	/** @description The ID of the server */
	serverId: string;
	/** @description The ID of the user */
	userId: string;
	/** @description If this member leaving was the result of a kick */
	isKick?: boolean;
	/** @description If this member leaving was the result of a ban */
	isBan?: boolean;
} /**
 * @description ServerMemberBanned
 */

export interface ServerMemberBanned {
	/** @description The ID of the server */
	serverId: string;
	/** @description serverMemberBan */
	serverMemberBan: ServerMemberBan;
} /**
 * @description ServerMemberUnbanned
 */

export interface ServerMemberUnbanned {
	/** @description The ID of the server */
	serverId: string;
	/** @description serverMemberBan */
	serverMemberBan: ServerMemberBan;
} /**
 * @description ServerMemberUpdated
 */

export interface ServerMemberUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description userInfo */
	userInfo: {
		id: string;
		nickname?: string;
	};
} /**
 * @description ServerRolesUpdated
 */

export interface ServerRolesUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description memberRoleIds */
	memberRoleIds: ({
		userId: string;
		roleIds: (number)[];
	})[];
} /**
 * @description ServerChannelCreated
 */

export interface ServerChannelCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description channel */
	channel: ServerChannel;
} /**
 * @description ServerChannelUpdated
 */

export interface ServerChannelUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description channel */
	channel: ServerChannel;
} /**
 * @description ServerChannelDeleted
 */

export interface ServerChannelDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description channel */
	channel: ServerChannel;
} /**
 * @description ServerMemberSocialLinkCreated
 */

export interface ServerMemberSocialLinkCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description socialLink */
	socialLink: SocialLink;
} /**
 * @description ServerMemberSocialLinkUpdated
 */

export interface ServerMemberSocialLinkUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description socialLink */
	socialLink: SocialLink;
} /**
 * @description ServerMemberSocialLinkDeleted
 */

export interface ServerMemberSocialLinkDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description socialLink */
	socialLink: SocialLink;
} /**
 * @description ServerWebhookCreated
 */

export interface ServerWebhookCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description webhook */
	webhook: Webhook;
} /**
 * @description ServerWebhookUpdated
 */

export interface ServerWebhookUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description webhook */
	webhook: Webhook;
} /**
 * @description DocCreated
 */

export interface DocCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description doc */
	doc: Doc;
} /**
 * @description DocUpdated
 */

export interface DocUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description doc */
	doc: Doc;
} /**
 * @description DocDeleted
 */

export interface DocDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description doc */
	doc: Doc;
} /**
 * @description DocCommentCreated
 */

export interface DocCommentCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description docComment */
	docComment: DocComment;
} /**
 * @description DocCommentDeleted
 */

export interface DocCommentDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description docComment */
	docComment: DocComment;
} /**
 * @description DocCommentUpdated
 */

export interface DocCommentUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description docComment */
	docComment: DocComment;
} /**
 * @description CalendarEventCreated
 */

export interface CalendarEventCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description calendarEvent */
	calendarEvent: CalendarEvent;
} /**
 * @description CalendarEventUpdated
 */

export interface CalendarEventUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description calendarEvent */
	calendarEvent: CalendarEvent;
} /**
 * @description CalendarEventDeleted
 */

export interface CalendarEventDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description calendarEvent */
	calendarEvent: CalendarEvent;
} /**
 * @description ForumTopicCreated
 */

export interface ForumTopicCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description forumTopic */
	forumTopic: ForumTopic;
} /**
 * @description ForumTopicUpdated
 */

export interface ForumTopicUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description forumTopic */
	forumTopic: ForumTopic;
} /**
 * @description ForumTopicDeleted
 */

export interface ForumTopicDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description forumTopic */
	forumTopic: ForumTopic;
} /**
 * @description ForumTopicPinned
 */

export interface ForumTopicPinned {
	/** @description The ID of the server */
	serverId: string;
	/** @description forumTopic */
	forumTopic: ForumTopic;
} /**
 * @description ForumTopicUnpinned
 */

export interface ForumTopicUnpinned {
	/** @description The ID of the server */
	serverId: string;
	/** @description forumTopic */
	forumTopic: ForumTopic;
} /**
 * @description ForumTopicReactionCreated
 */

export interface ForumTopicReactionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: ForumTopicReaction;
} /**
 * @description ForumTopicReactionDeleted
 */

export interface ForumTopicReactionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: ForumTopicReaction;
} /**
 * @description ForumTopicLocked
 */

export interface ForumTopicLocked {
	/** @description The ID of the server */
	serverId: string;
	/** @description forumTopic */
	forumTopic: ForumTopic;
} /**
 * @description ForumTopicUnlocked
 */

export interface ForumTopicUnlocked {
	/** @description The ID of the server */
	serverId: string;
	/** @description forumTopic */
	forumTopic: ForumTopic;
} /**
 * @description ForumTopicCommentCreated
 */

export interface ForumTopicCommentCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description forumTopicComment */
	forumTopicComment: ForumTopicComment;
} /**
 * @description ForumTopicCommentUpdated
 */

export interface ForumTopicCommentUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description forumTopicComment */
	forumTopicComment: ForumTopicComment;
} /**
 * @description ForumTopicCommentDeleted
 */

export interface ForumTopicCommentDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description forumTopicComment */
	forumTopicComment: ForumTopicComment;
} /**
 * @description CalendarEventRsvpUpdated
 */

export interface CalendarEventRsvpUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description calendarEventRsvp */
	calendarEventRsvp: CalendarEventRsvp;
} /**
 * @description CalendarEventRsvpManyUpdated
 */

export interface CalendarEventRsvpManyUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description calendarEventRsvps */
	calendarEventRsvps: (CalendarEventRsvp)[];
} /**
 * @description CalendarEventRsvpDeleted
 */

export interface CalendarEventRsvpDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description calendarEventRsvp */
	calendarEventRsvp: CalendarEventRsvp;
} /**
 * @description ListItemCreated
 */

export interface ListItemCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description listItem */
	listItem: ListItem;
} /**
 * @description ListItemUpdated
 */

export interface ListItemUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description listItem */
	listItem: ListItem;
} /**
 * @description ListItemDeleted
 */

export interface ListItemDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description listItem */
	listItem: ListItem;
} /**
 * @description ListItemCompleted
 */

export interface ListItemCompleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description listItem */
	listItem: ListItem;
} /**
 * @description ListItemUncompleted
 */

export interface ListItemUncompleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description listItem */
	listItem: ListItem;
} /**
 * @description ChannelMessageReactionCreated
 */

export interface ChannelMessageReactionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: ChatMessageReaction;
} /**
 * @description ChannelMessageReactionDeleted
 */

export interface ChannelMessageReactionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description The ID of the user who deleted this reaction */
	deletedBy: string;
	/** @description reaction */
	reaction: ChatMessageReaction;
} /**
 * @description ChannelMessageReactionManyDeleted
 */

export interface ChannelMessageReactionManyDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description The ID of the channel */
	channelId: string;
	/** @description The ID of the message */
	messageId: string;
	/** @description The ID of the user who deleted this reaction */
	deletedBy: string;
	/** @description The count of reactions that were removed */
	count: number;
	/** @description If present, only reactions of this emote were bulk removed from the message */
	emote?: Emote;
} /**
 * @description ForumTopicCommentReactionCreated
 */

export interface ForumTopicCommentReactionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: ForumTopicCommentReaction;
} /**
 * @description ForumTopicCommentReactionDeleted
 */

export interface ForumTopicCommentReactionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: ForumTopicCommentReaction;
} /**
 * @description CalendarEventCommentCreated
 */

export interface CalendarEventCommentCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description calendarEventComment */
	calendarEventComment: CalendarEventComment;
} /**
 * @description CalendarEventCommentDeleted
 */

export interface CalendarEventCommentDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description calendarEventComment */
	calendarEventComment: CalendarEventComment;
} /**
 * @description CalendarEventCommentUpdated
 */

export interface CalendarEventCommentUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description calendarEventComment */
	calendarEventComment: CalendarEventComment;
} /**
 * @description CalendarEventReactionCreated
 */

export interface CalendarEventReactionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: CalendarEventReaction;
} /**
 * @description CalendarEventReactionDeleted
 */

export interface CalendarEventReactionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: CalendarEventReaction;
} /**
 * @description CalendarEventCommentReactionCreated
 */

export interface CalendarEventCommentReactionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: CalendarEventCommentReaction;
} /**
 * @description CalendarEventCommentReactionDeleted
 */

export interface CalendarEventCommentReactionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: CalendarEventCommentReaction;
} /**
 * @description DocReactionCreated
 */

export interface DocReactionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: DocReaction;
} /**
 * @description DocReactionDeleted
 */

export interface DocReactionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: DocReaction;
} /**
 * @description DocCommentReactionCreated
 */

export interface DocCommentReactionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: DocCommentReaction;
} /**
 * @description DocCommentReactionDeleted
 */

export interface DocCommentReactionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: DocCommentReaction;
} /**
 * @description CalendarEventSeriesUpdated
 */

export interface CalendarEventSeriesUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description calendarEventSeries */
	calendarEventSeries: CalendarEventSeries;
	/** @description The calendar event updates started at */
	calendarEventId?: number;
} /**
 * @description CalendarEventSeriesDeleted
 */

export interface CalendarEventSeriesDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description calendarEventSeries */
	calendarEventSeries: CalendarEventSeries;
	/** @description The calendar event deletions started at */
	calendarEventId?: number;
} /**
 * @description GroupCreated
 */

export interface GroupCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description group */
	group: Group;
} /**
 * @description GroupUpdated
 */

export interface GroupUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description group */
	group: Group;
} /**
 * @description GroupDeleted
 */

export interface GroupDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description group */
	group: Group;
} /**
 * @description AnnouncementCreated
 */

export interface AnnouncementCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description announcement */
	announcement: Announcement;
} /**
 * @description AnnouncementUpdated
 */

export interface AnnouncementUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description announcement */
	announcement: Announcement;
} /**
 * @description AnnouncementDeleted
 */

export interface AnnouncementDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description announcement */
	announcement: Announcement;
} /**
 * @description AnnouncementReactionCreated
 */

export interface AnnouncementReactionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: AnnouncementReaction;
} /**
 * @description AnnouncementReactionDeleted
 */

export interface AnnouncementReactionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: AnnouncementReaction;
} /**
 * @description AnnouncementCommentCreated
 */

export interface AnnouncementCommentCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description announcementComment */
	announcementComment: AnnouncementComment;
} /**
 * @description AnnouncementCommentUpdated
 */

export interface AnnouncementCommentUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description announcementComment */
	announcementComment: AnnouncementComment;
} /**
 * @description AnnouncementCommentDeleted
 */

export interface AnnouncementCommentDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description announcementComment */
	announcementComment: AnnouncementComment;
} /**
 * @description AnnouncementCommentReactionCreated
 */

export interface AnnouncementCommentReactionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: AnnouncementCommentReaction;
} /**
 * @description AnnouncementCommentReactionDeleted
 */

export interface AnnouncementCommentReactionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description reaction */
	reaction: AnnouncementCommentReaction;
} /**
 * @description UserStatusCreated
 */

export interface UserStatusCreated {
	/** @description An ISO 8601 timestamp that will be used to indicate when an expiration occurs. Expiration usually will not occur exactly at this time. Bot logic should not expect a guarantee of timing as a result, but can expect that it'll happen very shortly afterwards */
	expiresAt?: string;
	/** @description The ID of the user */
	userId: string;
	/** @description userStatus */
	userStatus: UserStatus;
} /**
 * @description UserStatusDeleted
 */

export interface UserStatusDeleted {
	/** @description The ID of the user */
	userId: string;
	/** @description userStatus */
	userStatus: UserStatus;
} /**
 * @description RoleCreated
 */

export interface RoleCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description role */
	role: Role;
} /**
 * @description RoleUpdated
 */

export interface RoleUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description role */
	role: Role;
} /**
 * @description RoleDeleted
 */

export interface RoleDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description role */
	role: Role;
} /**
 * @description ChannelArchived
 */

export interface ChannelArchived {
	/** @description The ID of the server */
	serverId: string;
	/** @description channel */
	channel: ServerChannel;
} /**
 * @description ChannelRestored
 */

export interface ChannelRestored {
	/** @description The ID of the server */
	serverId: string;
	/** @description channel */
	channel: ServerChannel;
} /**
 * @description CategoryCreated
 */

export interface CategoryCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description category */
	category: Category;
} /**
 * @description CategoryUpdated
 */

export interface CategoryUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description category */
	category: Category;
} /**
 * @description CategoryDeleted
 */

export interface CategoryDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description category */
	category: Category;
} /**
 * @description ChannelMessagePinned
 */

export interface ChannelMessagePinned {
	/** @description The ID of the server */
	serverId: string;
	/** @description message */
	message: ChatMessage;
} /**
 * @description ChannelMessageUnpinned
 */

export interface ChannelMessageUnpinned {
	/** @description The ID of the server */
	serverId: string;
	/** @description message */
	message: ChatMessage;
} /**
 * @description ChannelRolePermissionCreated
 */

export interface ChannelRolePermissionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelRolePermission */
	channelRolePermission: ChannelRolePermission;
} /**
 * @description ChannelRolePermissionUpdated
 */

export interface ChannelRolePermissionUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelRolePermission */
	channelRolePermission: ChannelRolePermission;
} /**
 * @description ChannelRolePermissionDeleted
 */

export interface ChannelRolePermissionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelRolePermission */
	channelRolePermission: ChannelRolePermission;
} /**
 * @description ChannelUserPermissionCreated
 */

export interface ChannelUserPermissionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelUserPermission */
	channelUserPermission: ChannelUserPermission;
} /**
 * @description ChannelUserPermissionUpdated
 */

export interface ChannelUserPermissionUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelUserPermission */
	channelUserPermission: ChannelUserPermission;
} /**
 * @description ChannelUserPermissionDeleted
 */

export interface ChannelUserPermissionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelUserPermission */
	channelUserPermission: ChannelUserPermission;
} /**
 * @description ChannelCategoryUserPermissionCreated
 */

export interface ChannelCategoryUserPermissionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelCategoryUserPermission */
	channelCategoryUserPermission: ChannelCategoryUserPermission;
} /**
 * @description ChannelCategoryRolePermissionCreated
 */

export interface ChannelCategoryRolePermissionCreated {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelCategoryRolePermission */
	channelCategoryRolePermission: ChannelCategoryRolePermission;
} /**
 * @description ChannelCategoryUserPermissionUpdated
 */

export interface ChannelCategoryUserPermissionUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelCategoryUserPermission */
	channelCategoryUserPermission: ChannelCategoryUserPermission;
} /**
 * @description ChannelCategoryRolePermissionUpdated
 */

export interface ChannelCategoryRolePermissionUpdated {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelCategoryRolePermission */
	channelCategoryRolePermission: ChannelCategoryRolePermission;
} /**
 * @description ChannelCategoryUserPermissionDeleted
 */

export interface ChannelCategoryUserPermissionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelCategoryUserPermission */
	channelCategoryUserPermission: ChannelCategoryUserPermission;
} /**
 * @description ChannelCategoryRolePermissionDeleted
 */

export interface ChannelCategoryRolePermissionDeleted {
	/** @description The ID of the server */
	serverId: string;
	/** @description channelCategoryRolePermission */
	channelCategoryRolePermission: ChannelCategoryRolePermission;
}
export interface responses {
	_WelcomeMessage: _WelcomeMessage;
	BotServerMembershipCreated: BotServerMembershipCreated;
	BotServerMembershipDeleted: BotServerMembershipDeleted;
	ChatMessageCreated: ChatMessageCreated;
	ChatMessageUpdated: ChatMessageUpdated;
	ChatMessageDeleted: ChatMessageDeleted;
	ServerMemberJoined: ServerMemberJoined;
	ServerMemberRemoved: ServerMemberRemoved;
	ServerMemberBanned: ServerMemberBanned;
	ServerMemberUnbanned: ServerMemberUnbanned;
	ServerMemberUpdated: ServerMemberUpdated;
	ServerRolesUpdated: ServerRolesUpdated;
	ServerChannelCreated: ServerChannelCreated;
	ServerChannelUpdated: ServerChannelUpdated;
	ServerChannelDeleted: ServerChannelDeleted;
	ServerMemberSocialLinkCreated: ServerMemberSocialLinkCreated;
	ServerMemberSocialLinkUpdated: ServerMemberSocialLinkUpdated;
	ServerMemberSocialLinkDeleted: ServerMemberSocialLinkDeleted;
	ServerWebhookCreated: ServerWebhookCreated;
	ServerWebhookUpdated: ServerWebhookUpdated;
	DocCreated: DocCreated;
	DocUpdated: DocUpdated;
	DocDeleted: DocDeleted;
	DocCommentCreated: DocCommentCreated;
	DocCommentDeleted: DocCommentDeleted;
	DocCommentUpdated: DocCommentUpdated;
	CalendarEventCreated: CalendarEventCreated;
	CalendarEventUpdated: CalendarEventUpdated;
	CalendarEventDeleted: CalendarEventDeleted;
	ForumTopicCreated: ForumTopicCreated;
	ForumTopicUpdated: ForumTopicUpdated;
	ForumTopicDeleted: ForumTopicDeleted;
	ForumTopicPinned: ForumTopicPinned;
	ForumTopicUnpinned: ForumTopicUnpinned;
	ForumTopicReactionCreated: ForumTopicReactionCreated;
	ForumTopicReactionDeleted: ForumTopicReactionDeleted;
	ForumTopicLocked: ForumTopicLocked;
	ForumTopicUnlocked: ForumTopicUnlocked;
	ForumTopicCommentCreated: ForumTopicCommentCreated;
	ForumTopicCommentUpdated: ForumTopicCommentUpdated;
	ForumTopicCommentDeleted: ForumTopicCommentDeleted;
	CalendarEventRsvpUpdated: CalendarEventRsvpUpdated;
	CalendarEventRsvpManyUpdated: CalendarEventRsvpManyUpdated;
	CalendarEventRsvpDeleted: CalendarEventRsvpDeleted;
	ListItemCreated: ListItemCreated;
	ListItemUpdated: ListItemUpdated;
	ListItemDeleted: ListItemDeleted;
	ListItemCompleted: ListItemCompleted;
	ListItemUncompleted: ListItemUncompleted;
	ChannelMessageReactionCreated: ChannelMessageReactionCreated;
	ChannelMessageReactionDeleted: ChannelMessageReactionDeleted;
	ChannelMessageReactionManyDeleted: ChannelMessageReactionManyDeleted;
	ForumTopicCommentReactionCreated: ForumTopicCommentReactionCreated;
	ForumTopicCommentReactionDeleted: ForumTopicCommentReactionDeleted;
	CalendarEventCommentCreated: CalendarEventCommentCreated;
	CalendarEventCommentDeleted: CalendarEventCommentDeleted;
	CalendarEventCommentUpdated: CalendarEventCommentUpdated;
	CalendarEventReactionCreated: CalendarEventReactionCreated;
	CalendarEventReactionDeleted: CalendarEventReactionDeleted;
	CalendarEventCommentReactionCreated: CalendarEventCommentReactionCreated;
	CalendarEventCommentReactionDeleted: CalendarEventCommentReactionDeleted;
	DocReactionCreated: DocReactionCreated;
	DocReactionDeleted: DocReactionDeleted;
	DocCommentReactionCreated: DocCommentReactionCreated;
	DocCommentReactionDeleted: DocCommentReactionDeleted;
	CalendarEventSeriesUpdated: CalendarEventSeriesUpdated;
	CalendarEventSeriesDeleted: CalendarEventSeriesDeleted;
	GroupCreated: GroupCreated;
	GroupUpdated: GroupUpdated;
	GroupDeleted: GroupDeleted;
	AnnouncementCreated: AnnouncementCreated;
	AnnouncementUpdated: AnnouncementUpdated;
	AnnouncementDeleted: AnnouncementDeleted;
	AnnouncementReactionCreated: AnnouncementReactionCreated;
	AnnouncementReactionDeleted: AnnouncementReactionDeleted;
	AnnouncementCommentCreated: AnnouncementCommentCreated;
	AnnouncementCommentUpdated: AnnouncementCommentUpdated;
	AnnouncementCommentDeleted: AnnouncementCommentDeleted;
	AnnouncementCommentReactionCreated: AnnouncementCommentReactionCreated;
	AnnouncementCommentReactionDeleted: AnnouncementCommentReactionDeleted;
	UserStatusCreated: UserStatusCreated;
	UserStatusDeleted: UserStatusDeleted;
	RoleCreated: RoleCreated;
	RoleUpdated: RoleUpdated;
	RoleDeleted: RoleDeleted;
	ChannelArchived: ChannelArchived;
	ChannelRestored: ChannelRestored;
	CategoryCreated: CategoryCreated;
	CategoryUpdated: CategoryUpdated;
	CategoryDeleted: CategoryDeleted;
	ChannelMessagePinned: ChannelMessagePinned;
	ChannelMessageUnpinned: ChannelMessageUnpinned;
	ChannelRolePermissionCreated: ChannelRolePermissionCreated;
	ChannelRolePermissionUpdated: ChannelRolePermissionUpdated;
	ChannelRolePermissionDeleted: ChannelRolePermissionDeleted;
	ChannelUserPermissionCreated: ChannelUserPermissionCreated;
	ChannelUserPermissionUpdated: ChannelUserPermissionUpdated;
	ChannelUserPermissionDeleted: ChannelUserPermissionDeleted;
	ChannelCategoryUserPermissionCreated: ChannelCategoryUserPermissionCreated;
	ChannelCategoryRolePermissionCreated: ChannelCategoryRolePermissionCreated;
	ChannelCategoryUserPermissionUpdated: ChannelCategoryUserPermissionUpdated;
	ChannelCategoryRolePermissionUpdated: ChannelCategoryRolePermissionUpdated;
	ChannelCategoryUserPermissionDeleted: ChannelCategoryUserPermissionDeleted;
	ChannelCategoryRolePermissionDeleted: ChannelCategoryRolePermissionDeleted;
}
